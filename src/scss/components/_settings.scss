@use "../abstracts/colors" as c;
@use "../abstracts/sizes" as s;
@use "../abstracts/mixins" as m;

.open-settings {
    @include m.flex-center;
    @include m.default-animate;
    width: s.$very-large;
    height: s.$very-large;
    background: transparent;
    border: none;
    border-radius: 25%;
    cursor: pointer;

    &:hover {
        background-color: c.$settings-color;
    }

    &>img {
        @include m.default-animate;
    }

    &.open>img {
        transform: rotate(180deg);
    }
}

.settings {
    @include m.basic-shadow;
    position: absolute;
    list-style-type: none;
    color: c.$text-white;
    background-color: c.$settings-color;
    text-align: left;
    padding: s.$medium;
    border-radius: 5%;
    z-index: 100;
    top: s.$very-large;
    font-size: s.$medium;

    input::-webkit-outer-spin-button,
    input::-webkit-inner-spin-button,
    input[type=number] {
        -webkit-appearance: none;
        margin: 0;
        -moz-appearance: textfield !important;
        appearance: none;
    }

    button {
        background-color: transparent;
        backdrop-filter: brightness(80%);
        border: none;
        color: c.$text-white;
        cursor: pointer;
        @include m.pretty-shadow;
    }

    &> * + * {
        margin-top: s.$medium;
    }
}



.setting {
    width: s.$setting-size;
    @include m.flex-row;
    justify-content: space-between;
}

.setting-input {
    @include m.flex-row;
    justify-content: right;
    align-items: center;
}

.setting-section {
    font-weight: bold;
}

$setting-height: s.$large;

.number-input {
    input {
        width: s.$very-large;
        text-align: center;
        background: transparent;
        border: none;
        color: c.$text-white;
    }

    button {
        width: $setting-height;
        height: $setting-height;
        border-radius: s.$space-thick;
        @include m.flex-center;

        &:hover {
            background-color: c.$text-white;
            color: c.$settings-color;
        }

        &:active {
            transform: scale(0.9);
        }
    }
}

.checkbox-input {
    position: relative;
    display: inline-block;
    width: $setting-height * 2;
    height: $setting-height;
    margin-right: s.$medium;

    input {
        display: none;
    }

    input:checked {
        &+.slider {
            background-color: c.$text-white;

            &::before {
                transform: translateX($setting-height);
                background-color: c.$checkbox-selected;
            }

            &:hover {
                background-color: c.$text-mid;
            }
        }
    }

    .slider {
        position: absolute;
        inset: 0;
        cursor: pointer;
        background-color: c.$text-mid;
        @include m.default-animate;
        border-radius: $setting-height;
        @include m.pretty-shadow;

        &::before {
            @include m.pseudo;
            height: $setting-height;
            width: $setting-height;
            background-color: c.$checkbox-unselected;
            @include m.default-animate;
            border-radius: 50%;
            border: 1px solid c.$text-mid;
        }

        &:hover {
            background-color: c.$text-white;
        }
    }
}